version: '3.8'

services:
  # Frontend application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development version (optional)
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_HMR_HOST=localhost
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - dev

  # Future backend service placeholder
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3001:3001"
  #   environment:
  #     - NODE_ENV=production
  #     - DATABASE_URL=${DATABASE_URL}
  #     - JWT_SECRET=${JWT_SECRET}
  #   restart: unless-stopped
  #   networks:
  #     - app-network
  #   depends_on:
  #     - postgres

  # Future database service placeholder
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     - POSTGRES_DB=deployhub
  #     - POSTGRES_USER=${DB_USER:-deployhub}
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-deployhub}"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

  # Future Redis cache service placeholder
  # redis:
  #   image: redis:7-alpine
  #   restart: unless-stopped
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
